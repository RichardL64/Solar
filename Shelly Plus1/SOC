/*

  SOC
  Read Solis inverter battery SOC register to control the ouput switch
  Only turn on if the battery is over a threshold charge
  
  Uses a custom inverter server side interface
  
  Use case
    Prevent simple immersion diverter, e.g. SOLIC200 from diverting
    solar power before the battery is full
  
  Todo
    Local button should override - either toggle or 1 hour on
    
  R.Lincoln  March 2023

*/

let inverterIP = '192.168.1.143';   // Fixed inverter IP (mdns not working)
let checkSeconds = 60 *1;           // seconds between checks

let socOnThreshold = 95;            // on above this % full
let socOffThreshold = 90;           // off below this % full
let on = false;

//  Call the inverter, retreive 33139 - Battery state of charge %
//  http://192.168.1.143/R?a=33139
//
function getSOC() {
  Shelly.call("HTTP.GET", 
    { url: 'http://' + inverterIP + '/R?a=33139'},
//    { url: 'http://solis.local/R?a=33139'},
    readJSON,
    null);
}

//  Process the response JSON
//  e.g. {"data":[64]}
//  If the data value is over the threshold - turn on the switch
//  
function readJSON(res, error_code, error_msg) {
  if (res.code !== 200) return;            // exit on error

  let body = JSON.parse(res.body);         // extract JSON values
  let soc = body.data[0];  
  
  if (soc >= socOnThreshold) on = true;    // on/off hysteresis
  if (soc <= socOffThreshold) on = false;
  print('Battery:', soc, '%, on:', on);

  Shelly.call("switch.set",                // local switch control
    { id: 0, on: on },
    null, null);
}

//  Periodically check the percentage
//
print('Starting');
getSOC();
let timer = Timer.set(1000 *checkSeconds, true, getSOC, null);
